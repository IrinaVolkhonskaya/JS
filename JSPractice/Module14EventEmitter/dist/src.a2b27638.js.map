{"version":3,"sources":["src/libs/event-emitter.js","src/emitter.js","src/note-editor.js","src/list.js","src/note-count.js","src/index.js"],"names":["EventEmitter","eventTypes","events","types","type","callback","push","fn","filter","args","forEach","apply","Object","freeze","NOTE_ADDED","refs","notes","selectRefs","form","document","querySelector","input","init","addEventListener","evt","preventDefault","note","value","trim","emitter","emit","noteCount","length","reset","list","addNote","markup","insertAdjacentHTML","subscribe","update","output","textContent"],"mappings":";;AKAA,AFAA,ACAA,AFAA;;AGCA;;AACA,AFAA,ACAA,AFAA,ICAMe,ACAAA,AFAAA,ICAI,ACAA,AFAA,GCAG,ACAA,AFAA,ECAb,ACAA,AFAA;ADFA,ACGA,IAAMC,KAAK,GAAG,EAAd;ACCA,ACAA,IDAMC,ACAAsB,MAAM,GAAG,CDAC,GAAG,KCAbA,IDAAtB,ECAS,OAAmB,CDAf,GAAM;AACvBF,ACDgC,AFClC,ECAEA,EDAIE,ECAA,ACDYc,CDCXG,IAAL,GAAYf,ADAE,CEDkB,EFCf,KCAG,CAACC,ACDLW,GFCZd,MED4B,IDCpB,ADAK,CCAkB,EDAZ,KCAX,CAAZ;AACD,ACDCF,AFCAA,CCFF,CCCEA,AFCAA,IEDI,AFCA,CEDCyB,AFCAtB,IAAL,EEDA,CAAYuB,AFCAtB,QAAQ,CAACC,EEDrB,WFCY,CAAuB,OAAvB,CAAZ,mBEDmCW,SAAnC;AHHF,AGIC,AFCChB,CEHF,CFGEA,EDLId,ECKA,CAACoB,KAAL,EDLc,CCKDN,EDLIH,ECKA,CAACM,GDLK,CAACL,ACKX,CAAUO,KDLN,CAAc,OCKlB,CAAwB,oBAAxB,CAAb;ADJAN,AEKF,ADAC,CAHD,CDFEA,EEKIqB,OAAO,CFLD,EAAE,AEKE,SAAVA,OAAU,OAAc;AFNG,AEMH,ACA9B,CHNmB,CAAnB,EDFqBnC,AIQfiB,EDAaS,IAAW,ICAd,GAAG,CDAAA,IAAW,ICAxBT,UAAa,GAAM;AJPrB,AGQF,ACAAF,AFCF,EEDEA,EFCIO,ECDEc,ACAF,CAACI,CFCG,GAAG,CCDC,CCAZ,GAAcrB,IFCVG,IEDkB,AFCX,CEDYF,EFCN,GFTkB,MGQNM,ECAf,CAAuB,CDAzB,YCAE,CAAd,IDAA;AHRmC,AGUnCX,ACDD,AFCCE,CEHF,CDGEF,ADAAE,ICAI,CAACiB,IAAL,CAAUG,ADAA,GDLG,IAAIrC,WEKjB,CHVgBC,AGUa,SFLhB,CAAiB,ADLK,CGUnC,EAA0CmC,MAA1C;AFLgCnC,ADLG,AGWpC,ADCCc,CCLF,CFFkCd,ACOhCc,IAAI,CAACG,CFZWjB,GEYhB,CDP0C,ACOhCsB,EDPsBtB,IDLG,UEYnC,CAA2B,QAA3B,EAAqC,UAAAuB,CFZR,EAAM,AEYK,EAAI;ADPd,AGMhCP,AFEIO,CDRW,GCQXA,GAAG,CAACC,EEFE,YFEN;AFbiC,AGarCR,ADCI,QAAMS,ECDA,EDCI,GAAGX,IAAI,CAACM,KAAL,CAAWM,KAAX,CAAiBC,IAAjB,EAAb;AEFJC,AFII,QAAIH,IAAI,KEJJY,AFIS,EAAb,EAAiB,KEJrB,CAAkBT,iBAAQ1B,KAAR,CAAcW,UAAhC,EAA4CyB,MAA5C;AJXM,AGaNV,ADIIb,IAAAA,KFjBOd,AEiBF,CAACI,IAAN,CFjBE,AEiBSoB,ECJPY,CHbY,CEiBhB,CFjBE,MGaN,CAAkBT,iBAAQ1B,KAAR,CAAcW,UAAhC,EAA4CqB,OAA5C;AHZM,SAAKhC,KAAL,GAAaF,UAAb;AACD,AEgBD4B,qBAAQC,IAAR,CAAaD,iBAAQ1B,KAAR,CAAcW,UAA3B,EAAuC;AAAEY,MAAAA,IAAI,EAAJA,IAAF;AAAQK,MAAAA,SAAS,EAAEf,KAAK,CAACgB;AAAzB,KAAvC;8BFdU5B,MAAMC,UAAU;AACxB,AEcFU,IAAAA,IAAI,CAACG,CFdC,CAAC,EEcP,CAAUe,EFdE/B,GEcZ,GFdO,CAAYE,IAAZ,CAAL,EAAwB;AACtB,AEcL,GATD,UFLWF,MAAL,CAAYE,IAAZ,IAAoB,EAApB;AACD,AEcN,CAbD;;AFCM,AEcNkB,IAAI,OFdOpB,MAAL,CAAYE,IAAZ,EAAkBE,IAAlB,CAAuBD,QAAvB;AACD;;;gCAEWD,MAAMG,IAAI;AACpB,UAAI,CAAC,KAAKL,MAAL,CAAYE,IAAZ,CAAL,EAAwB;AAExB,WAAKF,MAAL,CAAYE,IAAZ,IAAoB,KAAKF,MAAL,CAAYE,IAAZ,EAAkBI,MAAlB,CAAyB,UAAAH,QAAQ;AAAA,eAAIA,QAAQ,KAAKE,EAAjB;AAAA,OAAjC,CAApB;AACD;;;yBAEIH,MAAe;AAAA,wCAANK,IAAM;AAANA,QAAAA,IAAM;AAAA;;AAClB,UAAI,CAAC,KAAKP,MAAL,CAAYE,IAAZ,CAAL,EAAwB;AAExB,WAAKF,MAAL,CAAYE,IAAZ,EAAkBM,OAAlB,CAA0B,UAAAL,QAAQ,EAAI;AACpCA,QAAAA,QAAQ,CAACM,KAAT,CAAe,IAAf,EAAqBF,IAArB;AACD,OAFD;AAGD","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["export default class EventEmitter {\r\n    constructor({ eventTypes = {} }) {\r\n      this.events = {};\r\n      this.types = eventTypes;\r\n    }\r\n  \r\n    subscribe(type, callback) {\r\n      if (!this.events[type]) {\r\n        this.events[type] = [];\r\n      }\r\n  \r\n      this.events[type].push(callback);\r\n    }\r\n  \r\n    unsubscribe(type, fn) {\r\n      if (!this.events[type]) return;\r\n  \r\n      this.events[type] = this.events[type].filter(callback => callback !== fn);\r\n    }\r\n  \r\n    emit(type, ...args) {\r\n      if (!this.events[type]) return;\r\n  \r\n      this.events[type].forEach(callback => {\r\n        callback.apply(null, args);\r\n      });\r\n    }\r\n  }\r\n  ","import EventEmitter from \"./libs/event-emitter\";\r\n\r\nconst eventTypes = Object.freeze({\r\n  NOTE_ADDED: \"NOTE_ADDED\"\r\n});\r\n\r\nexport default new EventEmitter({ eventTypes });\r\n","import emitter from \"./emitter\";\r\n\r\nconst refs = {};\r\nconst notes = [];\r\n\r\nconst selectRefs = () => {\r\n  refs.form = document.querySelector(\".form\");\r\n  refs.input = refs.form.querySelector('input[type=\"text\"]');\r\n};\r\n\r\nconst init = () => {\r\n  selectRefs();\r\n\r\n  refs.form.addEventListener(\"submit\", evt => {\r\n    evt.preventDefault();\r\n    const note = refs.input.value.trim();\r\n\r\n    if (note === \"\") return;\r\n\r\n    notes.push(note);\r\n    emitter.emit(emitter.types.NOTE_ADDED, { note, noteCount: notes.length });\r\n    refs.form.reset();\r\n  });\r\n};\r\n\r\ninit();\r\n","import emitter from \"./emitter\";\r\n\r\nconst refs = {};\r\n\r\nconst selectRefs = () => {\r\n  refs.list = document.querySelector(\".list\");\r\n};\r\n\r\nconst addNote = ({ note }) => {\r\n  const markup = `<li><span >${note}</span></li>`;\r\n\r\n  refs.list.insertAdjacentHTML(\"beforeend\", markup);\r\n};\r\n\r\nselectRefs();\r\nemitter.subscribe(emitter.types.NOTE_ADDED, addNote);\r\n","import emitter from \"./emitter\";\r\n\r\nconst refs = {};\r\n\r\nconst update = ({ noteCount }) => {\r\n  refs.output.textContent = `У Вас ${noteCount} записи(-ей)`;\r\n};\r\n\r\nconst selectRefs = () => {\r\n  refs.output = document.querySelector(\".note-count\");\r\n};\r\n\r\nselectRefs();\r\nemitter.subscribe(emitter.types.NOTE_ADDED, update);\r\n","import \"./note-editor\";\r\nimport \"./list\";\r\nimport \"./note-count\";\r\n"]}